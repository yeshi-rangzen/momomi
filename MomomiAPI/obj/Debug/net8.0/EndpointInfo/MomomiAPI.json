{
  "openapi": "3.0.1",
  "info": {
    "title": "Momomi API",
    "description": "Dating app API for Himalayan and Northeast Indian communities",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/send-otp-code": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/verify-otp-code": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/resend-otp-code": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Discovery/users": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Matches": {
      "get": {
        "tags": [
          "Matches"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MatchDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Matches/{userId}": {
      "delete": {
        "tags": [
          "Matches"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Messages/conversations": {
      "get": {
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/conversations/{conversationId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDetailsDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDetailsDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDetailsDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/conversations/{conversationId}/messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessagesDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessagesDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessagesDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/send": {
      "post": {
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSendDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSendDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSendDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/conversations/{conversationId}/mark-read": {
      "put": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessagesReadDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagesReadDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagesReadDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/messages/{messageId}": {
      "delete": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDeletionDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDeletionDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDeletionDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/users/{userId}/online-status": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Messages/statistics": {
      "get": {
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConversationsDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos/upload": {
      "post": {
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "isPrimary",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos/upload/batch": {
      "post": {
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "primaryPhotoIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPhotoUploadDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPhotoUploadDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPhotoUploadDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos/{photoId}": {
      "delete": {
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoDeletionDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoDeletionDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoDeletionDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos/primary/{photoId}": {
      "put": {
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryPhotoDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryPhotoDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryPhotoDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos/reorder": {
      "put": {
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoReorderDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoReorderDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoReorderDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Photos": {
      "get": {
        "tags": [
          "Photos"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPhotoDTOListOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPhotoDTOListOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPhotoDTOListOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/report": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/block": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/unblock": {
      "post": {
        "tags": [
          "Reporting"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/reports": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportsListDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportsListDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportsListDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/blocked-users": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockedUsersListDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockedUsersListDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockedUsersListDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/blocked-status/{userId}": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/quick-block/{userId}": {
      "put": {
        "tags": [
          "Reporting"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockUserDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reporting/quick-unblock/{userId}": {
      "put": {
        "tags": [
          "Reporting"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockUserDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Swipe": {
      "post": {
        "tags": [
          "Swipe"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwipeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SwipeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SwipeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Swipe/undo": {
      "post": {
        "tags": [
          "Swipe"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwipeResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDataOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileUpdateDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileUpdateDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileUpdateDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/discovery-filters": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoverySettingsDTOOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoverySettingsDTOOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoverySettingsDTOOperationResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscoveryFiltersRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscoveryFiltersRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscoveryFiltersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/deactivate": {
      "put": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeactivationDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeactivationDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeactivationDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeletionDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeletionDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeletionDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/discoverable": {
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/location": {
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFiltersUpdateDataOperationResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDeactivationData": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "wasActive": {
            "type": "boolean"
          },
          "deactivatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AccountDeactivationDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/AccountDeactivationData"
          }
        },
        "additionalProperties": false
      },
      "AccountDeletionData": {
        "type": "object",
        "properties": {
          "deletedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "photosDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "conversationsDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "swipesDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AccountDeletionDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/AccountDeletionData"
          }
        },
        "additionalProperties": false
      },
      "BatchPhotoUploadData": {
        "type": "object",
        "properties": {
          "successfulPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhotoDTO"
            },
            "nullable": true
          },
          "failedPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhotoUploadError"
            },
            "nullable": true
          },
          "totalPhotosCount": {
            "type": "integer",
            "format": "int32"
          },
          "successfulCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "failedCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BatchPhotoUploadDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/BatchPhotoUploadData"
          }
        },
        "additionalProperties": false
      },
      "BlockUserData": {
        "type": "object",
        "properties": {
          "blockedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "matchRemoved": {
            "type": "boolean"
          },
          "conversationDeleted": {
            "type": "boolean"
          },
          "messagesDeleted": {
            "type": "integer",
            "format": "int32"
          },
          "blockedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BlockUserDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/BlockUserData"
          }
        },
        "additionalProperties": false
      },
      "BlockUserRequest": {
        "required": [
          "blockedUserId"
        ],
        "type": "object",
        "properties": {
          "blockedUserId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "BlockedUserDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "primaryPhotoUrl": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "blockedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BlockedUsersListData": {
        "type": "object",
        "properties": {
          "blockedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockedUserDTO"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasMore": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BlockedUsersListDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/BlockedUsersListData"
          }
        },
        "additionalProperties": false
      },
      "ChildrenStatusType": {
        "enum": [
          "DontHaveChildren",
          "HaveChildren",
          "PreferNotToSay"
        ],
        "type": "string"
      },
      "ConversationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "otherUserId": {
            "type": "string",
            "format": "uuid"
          },
          "otherUserName": {
            "type": "string",
            "nullable": true
          },
          "otherUserPhoto": {
            "type": "string",
            "nullable": true
          },
          "lastMessage": {
            "$ref": "#/components/schemas/MessageDTO"
          },
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConversationDetailsData": {
        "type": "object",
        "properties": {
          "conversation": {
            "$ref": "#/components/schemas/ConversationDTO"
          },
          "isOtherUserOnline": {
            "type": "boolean"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canSendMessages": {
            "type": "boolean"
          },
          "restrictionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConversationDetailsDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/ConversationDetailsData"
          }
        },
        "additionalProperties": false
      },
      "ConversationMessagesData": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDTO"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasMore": {
            "type": "boolean"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastMessageAt": {
            "type": "string",
            "format": "date-time"
          },
          "fromCache": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConversationMessagesDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/ConversationMessagesData"
          }
        },
        "additionalProperties": false
      },
      "DiscoveryData": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryUserDTO"
            },
            "nullable": true
          },
          "discoveryMode": {
            "type": "string",
            "nullable": true
          },
          "requestedCount": {
            "type": "integer",
            "format": "int32"
          },
          "actualCount": {
            "type": "integer",
            "format": "int32"
          },
          "fromCache": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DiscoveryDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/DiscoveryData"
          }
        },
        "additionalProperties": false
      },
      "DiscoveryFiltersUpdateData": {
        "type": "object",
        "properties": {
          "updatedSettings": {
            "$ref": "#/components/schemas/DiscoverySettingsDTO"
          },
          "updatedFilters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "locationChanged": {
            "type": "boolean"
          },
          "filtersChanged": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DiscoveryFiltersUpdateDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/DiscoveryFiltersUpdateData"
          }
        },
        "additionalProperties": false
      },
      "DiscoverySettingsDTO": {
        "type": "object",
        "properties": {
          "enableGlobalDiscovery": {
            "type": "boolean"
          },
          "isDiscoverable": {
            "type": "boolean"
          },
          "isGloballyDiscoverable": {
            "type": "boolean"
          },
          "interestedIn": {
            "$ref": "#/components/schemas/GenderType"
          },
          "minAge": {
            "type": "integer",
            "format": "int32"
          },
          "maxAge": {
            "type": "integer",
            "format": "int32"
          },
          "maxDistanceKm": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "neighbourhood": {
            "type": "string",
            "nullable": true
          },
          "hasLocation": {
            "type": "boolean"
          },
          "preferredHeritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "preferredReligions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "preferredLanguagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "preferredHeightMin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredHeightMax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredEducationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationLevelType"
            },
            "nullable": true
          },
          "preferredChildren": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildrenStatusType"
            },
            "nullable": true
          },
          "preferredFamilyPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FamilyPlanType"
            },
            "nullable": true
          },
          "preferredDrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredSmoking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredDrinking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredMarijuana": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "isPremiumUser": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DiscoverySettingsDTOOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/DiscoverySettingsDTO"
          }
        },
        "additionalProperties": false
      },
      "DiscoveryUserDTO": {
        "required": [
          "firstName",
          "hometown"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "heightCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "hometown": {
            "type": "string",
            "nullable": true
          },
          "neighbourhood": {
            "type": "string",
            "nullable": true
          },
          "occupation": {
            "type": "string",
            "nullable": true
          },
          "educationLevel": {
            "$ref": "#/components/schemas/EducationLevelType"
          },
          "heritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "religion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "languagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "familyPlan": {
            "$ref": "#/components/schemas/FamilyPlanType"
          },
          "children": {
            "$ref": "#/components/schemas/ChildrenStatusType"
          },
          "drugs": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "smoking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "marijuana": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "drinking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "isVerified": {
            "type": "boolean"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhotoDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EducationLevelType": {
        "enum": [
          "SecondarySchool",
          "Undergrad",
          "Postgrad",
          "PreferNotToSay"
        ],
        "type": "string"
      },
      "EmailVerificationData": {
        "type": "object",
        "properties": {
          "verificationToken": {
            "type": "string",
            "nullable": true
          },
          "isEmailRegistered": {
            "type": "boolean"
          },
          "remainingAttempts": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VerificationType"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmailVerificationDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/EmailVerificationData"
          }
        },
        "additionalProperties": false
      },
      "FamilyPlanType": {
        "enum": [
          "DontWantChildren",
          "WantChildren",
          "OpenToChildren",
          "NotSure",
          "PreferNotToSay"
        ],
        "type": "string"
      },
      "GenderType": {
        "enum": [
          "Male",
          "Female",
          "NonBinary",
          "Other"
        ],
        "type": "string"
      },
      "HeritageType": {
        "enum": [
          "Arunachali",
          "Bhutanese",
          "Himachali",
          "Ladakhi",
          "Lepcha",
          "Nepali",
          "Sikkimese",
          "Tibetan",
          "Uttarakhandi",
          "Other"
        ],
        "type": "string"
      },
      "LanguageType": {
        "enum": [
          "English",
          "Hindi",
          "Ladakhi",
          "Balti",
          "Kinnauri",
          "Lahauli",
          "SpitiBhoti",
          "Tibetan",
          "Jad",
          "Byangsi",
          "Chaudangsi",
          "Rangkas",
          "Bhutia",
          "Bhoti",
          "Drenjongke",
          "Lepcha",
          "Nepali",
          "Adi",
          "Apatani",
          "Nyishi",
          "Mishmi",
          "Tagin",
          "Monpa",
          "Sherdukpen",
          "Nocte",
          "Wancho",
          "Tamang",
          "Gurung",
          "Sherpa",
          "Lhomi",
          "Limbu",
          "Rai",
          "Magar",
          "Thakali",
          "Manangba",
          "Newar",
          "Walungge",
          "Dolpo",
          "Tsumke",
          "Dzongkha",
          "Tshangla",
          "Sharchhopkha",
          "LhotshampaDialects",
          "Brokpa",
          "Layakha",
          "Khengkha",
          "Other"
        ],
        "type": "string"
      },
      "LastMessageData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "senderId": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LocationUpdateRequest": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "neighbourhood": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginData": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "tokenExpiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LoginDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/LoginData"
          }
        },
        "additionalProperties": false
      },
      "LoginWithOtpRequest": {
        "required": [
          "email",
          "otp"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "otp": {
            "maxLength": 6,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MatchConversationData": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "format": "uuid"
          },
          "matchedAt": {
            "type": "string",
            "format": "date-time"
          },
          "otherUserId": {
            "type": "string",
            "format": "uuid"
          },
          "isOtherUserActive": {
            "type": "boolean"
          },
          "primaryPhotoUrl": {
            "type": "string",
            "nullable": true
          },
          "otherUserFirstName": {
            "type": "string",
            "nullable": true
          },
          "otherUserLastName": {
            "type": "string",
            "nullable": true
          },
          "lastMessage": {
            "$ref": "#/components/schemas/LastMessageData"
          },
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "isFromSuperLike": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MatchData": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchConversationData"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "fromCache": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MatchDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/MatchData"
          }
        },
        "additionalProperties": false
      },
      "MessageDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "conversationId": {
            "type": "string",
            "format": "uuid"
          },
          "senderId": {
            "type": "string",
            "format": "uuid"
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MessageDeletionData": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "format": "uuid"
          },
          "conversationId": {
            "type": "string",
            "format": "uuid"
          },
          "wasWithinTimeLimit": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageDeletionDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/MessageDeletionData"
          }
        },
        "additionalProperties": false
      },
      "MessageSendData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/MessageDTO"
          },
          "receiverId": {
            "type": "string",
            "format": "uuid"
          },
          "isFirstMessage": {
            "type": "boolean"
          },
          "conversationMessageCount": {
            "type": "integer",
            "format": "int32"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MessageSendDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/MessageSendData"
          }
        },
        "additionalProperties": false
      },
      "MessagesReadData": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "format": "uuid"
          },
          "readMessageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "markedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastReadMessageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessagesReadDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/MessagesReadData"
          }
        },
        "additionalProperties": false
      },
      "PhotoDeletionData": {
        "type": "object",
        "properties": {
          "deletedPhotoId": {
            "type": "string",
            "format": "uuid"
          },
          "wasPrimary": {
            "type": "boolean"
          },
          "newPrimaryPhotoId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "remainingPhotosCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PhotoDeletionDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/PhotoDeletionData"
          }
        },
        "additionalProperties": false
      },
      "PhotoReorderData": {
        "type": "object",
        "properties": {
          "reorderedPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhotoDTO"
            },
            "nullable": true
          },
          "photosCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PhotoReorderDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/PhotoReorderData"
          }
        },
        "additionalProperties": false
      },
      "PhotoUploadData": {
        "type": "object",
        "properties": {
          "photo": {
            "$ref": "#/components/schemas/UserPhotoDTO"
          },
          "totalPhotosCount": {
            "type": "integer",
            "format": "int32"
          },
          "setAsPrimary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PhotoUploadDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/PhotoUploadData"
          }
        },
        "additionalProperties": false
      },
      "PhotoUploadError": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreferencesDTO": {
        "type": "object",
        "properties": {
          "preferredHeritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "preferredReligions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "languagePreference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "preferredHeightMin": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredHeightMax": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredChildren": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildrenStatusType"
            },
            "nullable": true
          },
          "preferredFamilyPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FamilyPlanType"
            },
            "nullable": true
          },
          "preferredDrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredSmoking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredDrinking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredMarijuana": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredEducationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationLevelType"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PrimaryPhotoData": {
        "type": "object",
        "properties": {
          "newPrimaryPhotoId": {
            "type": "string",
            "format": "uuid"
          },
          "previousPrimaryPhotoId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "newPrimaryPhoto": {
            "$ref": "#/components/schemas/UserPhotoDTO"
          }
        },
        "additionalProperties": false
      },
      "PrimaryPhotoDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/PrimaryPhotoData"
          }
        },
        "additionalProperties": false
      },
      "ProfileUpdateData": {
        "type": "object",
        "properties": {
          "updatedUser": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "updatedFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requiredDiscoveryRefresh": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProfileUpdateDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/ProfileUpdateData"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenData": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "tokenExpiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/RefreshTokenData"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegistrationData": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "tokenExpiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RegistrationDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/RegistrationData"
          }
        },
        "additionalProperties": false
      },
      "RegistrationRequest": {
        "required": [
          "dateOfBirth",
          "email",
          "firstName",
          "gender",
          "heritage",
          "hometown",
          "interestedIn",
          "languagesSpoken",
          "latitude",
          "longitude",
          "religion",
          "verificationToken"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "verificationToken": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "interestedIn": {
            "$ref": "#/components/schemas/GenderType"
          },
          "hometown": {
            "minLength": 1,
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "neighbourhood": {
            "type": "string",
            "nullable": true
          },
          "heritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            }
          },
          "religion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            }
          },
          "languagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            }
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReligionType": {
        "enum": [
          "Agnostic",
          "Animism",
          "Atheism",
          "Buddhism",
          "Christian",
          "DonyiPolo",
          "Hindu",
          "Islam",
          "Spiritual",
          "Other"
        ],
        "type": "string"
      },
      "ReportReason": {
        "enum": [
          "Block",
          "Inappropriate",
          "Spam",
          "FakeProfile",
          "Harassment",
          "Underage",
          "Other"
        ],
        "type": "string"
      },
      "ReportUserRequest": {
        "required": [
          "reason",
          "reportedUserId"
        ],
        "type": "object",
        "properties": {
          "reportedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "$ref": "#/components/schemas/ReportReason"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResendOtpRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "SendMessageRequest": {
        "required": [
          "content",
          "conversationId"
        ],
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "messageType": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendOtpRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionDTO": {
        "type": "object",
        "properties": {
          "subscriptionType": {
            "$ref": "#/components/schemas/SubscriptionType"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionType": {
        "enum": [
          "Free",
          "Premium"
        ],
        "type": "string"
      },
      "SwipeData": {
        "type": "object",
        "properties": {
          "outcome": {
            "$ref": "#/components/schemas/SwipeOutcome"
          },
          "swipedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isMatch": {
            "type": "boolean"
          },
          "swipeType": {
            "type": "string",
            "nullable": true
          },
          "swipeTimestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SwipeOutcome": {
        "enum": [
          "Success",
          "LimitReached",
          "UserAlreadyProcessed",
          "UserBlocked",
          "UserNotFound",
          "MatchCreated",
          "SwipeUndone",
          "NoRecentPassToUndo"
        ],
        "type": "string"
      },
      "SwipeRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "swipeType": {
            "$ref": "#/components/schemas/SwipeType"
          },
          "discoveryMode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwipeResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/SwipeData"
          },
          "outcome": {
            "$ref": "#/components/schemas/SwipeOutcome"
          },
          "swipedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SwipeType": {
        "enum": [
          "Like",
          "SuperLike",
          "Pass",
          "Unmatched",
          "Reported"
        ],
        "type": "string"
      },
      "UnblockUserData": {
        "type": "object",
        "properties": {
          "unblockedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "unblockedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UnblockUserDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UnblockUserData"
          }
        },
        "additionalProperties": false
      },
      "UnblockUserRequest": {
        "required": [
          "unblockedUserId"
        ],
        "type": "object",
        "properties": {
          "unblockedUserId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UpdateDiscoveryFiltersRequest": {
        "type": "object",
        "properties": {
          "isDiscoverable": {
            "type": "boolean",
            "nullable": true
          },
          "isGloballyDiscoverable": {
            "type": "boolean",
            "nullable": true
          },
          "enableGlobalDiscovery": {
            "type": "boolean",
            "nullable": true
          },
          "interestedIn": {
            "$ref": "#/components/schemas/GenderType"
          },
          "minAge": {
            "maximum": 100,
            "minimum": 18,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxAge": {
            "maximum": 100,
            "minimum": 18,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "neighbourhood": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "maxDistanceKm": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredHeritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "preferredReligions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "preferredLanguagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "preferredHeightMin": {
            "maximum": 250,
            "minimum": 120,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredHeightMax": {
            "maximum": 250,
            "minimum": 120,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "preferredEducationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationLevelType"
            },
            "nullable": true
          },
          "preferredChildren": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildrenStatusType"
            },
            "nullable": true
          },
          "preferredFamilyPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FamilyPlanType"
            },
            "nullable": true
          },
          "preferredDrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredSmoking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredDrinking": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          },
          "preferredMarijuana": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViceFrequencyType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "bio": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "hometown": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "occupation": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "heightCm": {
            "maximum": 250,
            "minimum": 120,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "heritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "religion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "languagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "educationLevel": {
            "$ref": "#/components/schemas/EducationLevelType"
          },
          "children": {
            "$ref": "#/components/schemas/ChildrenStatusType"
          },
          "familyPlan": {
            "$ref": "#/components/schemas/FamilyPlanType"
          },
          "drugs": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "smoking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "marijuana": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "drinking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "notificationsEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "isOnboarding": {
            "type": "boolean",
            "nullable": true
          },
          "pushToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsageLimitsDTO": {
        "type": "object",
        "properties": {
          "likesUsedToday": {
            "type": "integer",
            "format": "int32"
          },
          "maxLikesPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "superLikesUsedToday": {
            "type": "integer",
            "format": "int32"
          },
          "maxSuperLikesPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "adsWatchedToday": {
            "type": "integer",
            "format": "int32"
          },
          "maxAdsPerDay": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserConversationsData": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationDTO"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "unreadConversationsCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalUnreadMessages": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "fromCache": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserConversationsDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UserConversationsData"
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "required": [
          "email",
          "firstName",
          "hometown",
          "preferences"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "heightCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "hometown": {
            "type": "string",
            "nullable": true
          },
          "neighbourhood": {
            "type": "string",
            "nullable": true
          },
          "occupation": {
            "type": "string",
            "nullable": true
          },
          "educationLevel": {
            "$ref": "#/components/schemas/EducationLevelType"
          },
          "heritage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeritageType"
            },
            "nullable": true
          },
          "religion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReligionType"
            },
            "nullable": true
          },
          "languagesSpoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            },
            "nullable": true
          },
          "familyPlan": {
            "$ref": "#/components/schemas/FamilyPlanType"
          },
          "children": {
            "$ref": "#/components/schemas/ChildrenStatusType"
          },
          "drugs": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "smoking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "marijuana": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "drinking": {
            "$ref": "#/components/schemas/ViceFrequencyType"
          },
          "interestedIn": {
            "$ref": "#/components/schemas/GenderType"
          },
          "minAge": {
            "type": "integer",
            "format": "int32"
          },
          "maxAge": {
            "type": "integer",
            "format": "int32"
          },
          "maxDistanceKm": {
            "type": "integer",
            "format": "int32"
          },
          "isDiscoverable": {
            "type": "boolean"
          },
          "isGloballyDiscoverable": {
            "type": "boolean"
          },
          "enableGlobalDiscovery": {
            "type": "boolean"
          },
          "pushToken": {
            "type": "string",
            "nullable": true
          },
          "notificaitonsEnabled": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isOnboarding": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastActive": {
            "type": "string",
            "format": "date-time"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhotoDTO"
            },
            "nullable": true
          },
          "preferences": {
            "$ref": "#/components/schemas/PreferencesDTO"
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionDTO"
          },
          "usageLimit": {
            "$ref": "#/components/schemas/UsageLimitsDTO"
          }
        },
        "additionalProperties": false
      },
      "UserPhotoDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "photoOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isPrimary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserPhotoDTOListOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPhotoDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileData": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "wasCached": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserProfileDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UserProfileData"
          }
        },
        "additionalProperties": false
      },
      "UserReportDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reportedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "reportedUserName": {
            "type": "string",
            "nullable": true
          },
          "primaryPhoto": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "$ref": "#/components/schemas/ReportReason"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reportedAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserReportData": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "format": "uuid"
          },
          "reportedUserId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "$ref": "#/components/schemas/ReportReason"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "matchRemoved": {
            "type": "boolean"
          },
          "conversationDeleted": {
            "type": "boolean"
          },
          "reportedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserReportDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UserReportData"
          }
        },
        "additionalProperties": false
      },
      "UserReportsListData": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReportDTO"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pendingCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasMore": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserReportsListDataOperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UserReportsListData"
          }
        },
        "additionalProperties": false
      },
      "VerificationType": {
        "enum": [
          "CodeSent",
          "CodeVerified",
          "CodeExpired",
          "CodeInvalid",
          "RateLimitExceeded",
          "ValidationError",
          "Error"
        ],
        "type": "string"
      },
      "VerifyOtpRequest": {
        "required": [
          "email",
          "otp"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "otp": {
            "maxLength": 6,
            "minLength": 6,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ViceFrequencyType": {
        "enum": [
          "Yes",
          "No",
          "Sometimes",
          "PreferNotToSay"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}